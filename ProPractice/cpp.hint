// Hint files help the Visual Studio IDE interpret Visual C++ identifiers
// such as names of functions and macros.
// For more information see https://go.microsoft.com/fwlink/?linkid=865984
#define WINRT_PROPERTY(type, name, __VA_ARGS__) public: type name() const noexcept { return _##name; } void name(const type& value) noexcept { _##name = value; } private: type _##name{ __VA_ARGS__ }; public:
#define WINRT_READONLY_PROPERTY(type, name, __VA_ARGS__) public: type name() const noexcept { return _##name; } private: type _##name{ __VA_ARGS__ }; public:
#define WINRT_OBSERVABLE_PROPERTY(type, name, event, __VA_ARGS__) public: type name() const noexcept { return _##name; }; void name(const type& value) { if (_##name != value) { _##name = value; event(*this, winrt::Microsoft::UI::Xaml::Data::PropertyChangedEventArgs{ L###name }); } }; private: type _##name{ __VA_ARGS__ }; void _set##name(const type& value) { _##name = value; }; public:
#define WINRT_CALLBACK(name, args) public: winrt::event_token name(const args& handler) { return _##name##Handlers.add(handler); } void name(const winrt::event_token& token) { _##name##Handlers.remove(token); } protected: winrt::event<args> _##name##Handlers; public:
